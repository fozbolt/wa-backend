{
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\wa\\wa-backend",
      "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\wa\\wa-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _memory_storage = _interopRequireDefault(require(\"./memory_storage\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//u trenutnom direktoriju\nvar app = (0, _express[\"default\"])(); // instanciranje aplikacije\n\napp.use((0, _cors[\"default\"])()); //na svim rutama omogucimo cors (cross origin resource sharing)\n\nvar port = 3000; // port na kojem će web server slušati\n\napp.use(_express[\"default\"].json());\napp.get('/', function (req, res) {\n  var poruka = \"Na landing pageu ste. Idite na /posts za postove\";\n  console.log(poruka);\n  res.send(poruka);\n});\napp.post('/posts', function (req, res) {\n  var poruka = req.body;\n  console.log(poruka);\n\n  _memory_storage[\"default\"].posts.push(poruka);\n\n  res.json('OK');\n});\napp.get('/posts', function (req, res) {\n  var postovi = _memory_storage[\"default\"].posts;\n  var query = req.query; //WA-206\n\n  if (query.title) {\n    //ako je predan parametar title, inače prikazuj sve\n    postovi = postovi.filter(function (e) {\n      return e.title.indexOf(query.title) >= 0;\n    });\n  }\n\n  if (query.createdBy) {\n    postovi = postovi.filter(function (e) {\n      return e.createdBy.indexOf(query.createdBy) >= 0;\n    });\n  } //WA-207\n  //sistemski atribut/indikator koji kaze da se mora pretrazivati po bilo cemu\n\n\n  if (query._any) {\n    var pretraga = query._any;\n    var pojmovi = pretraga.split(\" \");\n    postovi = postovi.filter(function (post) {\n      var podaci = post.title + post.createdBy;\n      var rezultat = pojmovi.every(function (pojam) {\n        return podaci.indexOf(pojam) >= 0;\n      });\n      return rezultat;\n    });\n  } //nazad u storage da bi poslao cijeli objekt koji sadrži postove i max\n\n\n  _memory_storage[\"default\"].posts = postovi; //WA-208\n  //salje sve podatke o studentu s najvecim id-jem na fronted, tamo ispisemo samo id\n\n  _memory_storage[\"default\"].max = _memory_storage[\"default\"].posts.reduce(function (prev, curr) {\n    return prev.id > curr.id ? prev : curr;\n  });\n  res.json(_memory_storage[\"default\"]);\n}); // app.get('/posts', (req, res) => {\n//     let query = req.query\n//     //console.log(\"Pretraga: \", title)\n//     //indexOf vraća index na kojem se nalazi naš traženi substring\n//     let postovi = storage.posts\n//     //WA-206\n//     if(query.title){  //ako je predan parametar title, inače prikazuj sve\n//         postovi = postovi.filter(e => {\n//             return  e.title.indexOf(query.title) >= 0 \n//         })\n//     }\n//     if(query.createdBy){\n//         postovi = postovi.filter(e => {\n//             return  e.createdBy.indexOf(query.createdBy) >= 0 \n//         })\n//      }\n//      //WA-207\n//      //sistemski atribut/indikator koji kaze da se mora pretrazivati po bilo cemu\n//      if (query._any){\n//         let pretraga = query._any\n//         let pojmovi = pretraga.split(\" \")\n//         console.log(pojmovi)\n//      }\n//       //WA-208\n//     let max = storage.posts.reduce(function(prev, curr) {\n//         return prev.id > curr.id ? prev : curr;\n//     });\n//     //ispis u backend konzolu kad otidemo na /posts  u backendu ili frontendu\n//     //console.log(max.id)\n//     res.json(postovi)\n//     //res.json({postovi, max})\n// });\n\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInBvcnQiLCJleHByZXNzIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInBvcnVrYSIsImNvbnNvbGUiLCJsb2ciLCJzZW5kIiwicG9zdCIsImJvZHkiLCJzdG9yYWdlIiwicG9zdHMiLCJwdXNoIiwicG9zdG92aSIsInF1ZXJ5IiwidGl0bGUiLCJmaWx0ZXIiLCJlIiwiaW5kZXhPZiIsImNyZWF0ZWRCeSIsIl9hbnkiLCJwcmV0cmFnYSIsInBvam1vdmkiLCJzcGxpdCIsInBvZGFjaSIsInJlenVsdGF0IiwiZXZlcnkiLCJwb2phbSIsIm1heCIsInJlZHVjZSIsInByZXYiLCJjdXJyIiwiaWQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFEeUM7QUFHekMsSUFBTUEsR0FBRyxHQUFHLDBCQUFaLEMsQ0FBc0I7O0FBQ3RCQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx1QkFBUixFLENBQWdCOztBQUNoQixJQUFNQyxJQUFJLEdBQUcsSUFBYixDLENBQWtCOztBQUNsQkYsR0FBRyxDQUFDQyxHQUFKLENBQVFFLG9CQUFRQyxJQUFSLEVBQVI7QUFHQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZCLE1BQUlDLE1BQU0sR0FBRyxrREFBYjtBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsTUFBWjtBQUNBRCxFQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBU0gsTUFBVDtBQUVILENBTEQ7QUFPQVIsR0FBRyxDQUFDWSxJQUFKLENBQVMsUUFBVCxFQUFtQixVQUFDTixHQUFELEVBQUtDLEdBQUwsRUFBWTtBQUMzQixNQUFJQyxNQUFNLEdBQUdGLEdBQUcsQ0FBQ08sSUFBakI7QUFDQUosRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLE1BQVo7O0FBQ0FNLDZCQUFRQyxLQUFSLENBQWNDLElBQWQsQ0FBbUJSLE1BQW5COztBQUNBRCxFQUFBQSxHQUFHLENBQUNILElBQUosQ0FBUyxJQUFUO0FBQ0gsQ0FMRDtBQVFBSixHQUFHLENBQUNLLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBRTVCLE1BQUlVLE9BQU8sR0FBR0gsMkJBQVFDLEtBQXRCO0FBQ0EsTUFBSUcsS0FBSyxHQUFHWixHQUFHLENBQUNZLEtBQWhCLENBSDRCLENBSzVCOztBQUNBLE1BQUdBLEtBQUssQ0FBQ0MsS0FBVCxFQUFnQjtBQUFzQjtBQUNsQ0YsSUFBQUEsT0FBTyxHQUFHQSxPQUFPLENBQUNHLE1BQVIsQ0FBZSxVQUFBQyxDQUFDO0FBQUEsYUFBSUEsQ0FBQyxDQUFDRixLQUFGLENBQVFHLE9BQVIsQ0FBZ0JKLEtBQUssQ0FBQ0MsS0FBdEIsS0FBZ0MsQ0FBcEM7QUFBQSxLQUFoQixDQUFWO0FBQ0g7O0FBRUQsTUFBR0QsS0FBSyxDQUFDSyxTQUFULEVBQW9CO0FBQ2hCTixJQUFBQSxPQUFPLEdBQUdBLE9BQU8sQ0FBQ0csTUFBUixDQUFlLFVBQUFDLENBQUM7QUFBQSxhQUFJQSxDQUFDLENBQUNFLFNBQUYsQ0FBWUQsT0FBWixDQUFvQkosS0FBSyxDQUFDSyxTQUExQixLQUF3QyxDQUE1QztBQUFBLEtBQWhCLENBQVY7QUFDSCxHQVoyQixDQWM1QjtBQUNBOzs7QUFDQSxNQUFHTCxLQUFLLENBQUNNLElBQVQsRUFBZTtBQUNYLFFBQUlDLFFBQVEsR0FBR1AsS0FBSyxDQUFDTSxJQUFyQjtBQUNBLFFBQUlFLE9BQU8sR0FBR0QsUUFBUSxDQUFDRSxLQUFULENBQWUsR0FBZixDQUFkO0FBRUFWLElBQUFBLE9BQU8sR0FBR0EsT0FBTyxDQUFDRyxNQUFSLENBQWUsVUFBQVIsSUFBSSxFQUFJO0FBQzdCLFVBQUlnQixNQUFNLEdBQUdoQixJQUFJLENBQUNPLEtBQUwsR0FBYVAsSUFBSSxDQUFDVyxTQUEvQjtBQUNBLFVBQUlNLFFBQVEsR0FBR0gsT0FBTyxDQUFDSSxLQUFSLENBQWMsVUFBQUMsS0FBSyxFQUFJO0FBQ2xDLGVBQU9ILE1BQU0sQ0FBQ04sT0FBUCxDQUFlUyxLQUFmLEtBQXlCLENBQWhDO0FBQ0gsT0FGYyxDQUFmO0FBR0EsYUFBT0YsUUFBUDtBQUNILEtBTlMsQ0FBVjtBQU9ILEdBM0IyQixDQTRCNUI7OztBQUNBZiw2QkFBUUMsS0FBUixHQUFnQkUsT0FBaEIsQ0E3QjRCLENBK0I1QjtBQUNBOztBQUNBSCw2QkFBUWtCLEdBQVIsR0FBY2xCLDJCQUFRQyxLQUFSLENBQWNrQixNQUFkLENBQXFCLFVBQVNDLElBQVQsRUFBZUMsSUFBZixFQUFxQjtBQUNwRCxXQUFPRCxJQUFJLENBQUNFLEVBQUwsR0FBVUQsSUFBSSxDQUFDQyxFQUFmLEdBQW9CRixJQUFwQixHQUEyQkMsSUFBbEM7QUFDQyxHQUZTLENBQWQ7QUFLQTVCLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTVSwwQkFBVDtBQUNILENBdkNELEUsQ0F5Q0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFHQTs7QUFHQWQsR0FBRyxDQUFDcUMsTUFBSixDQUFXbkMsSUFBWCxFQUFpQjtBQUFBLFNBQU1PLE9BQU8sQ0FBQ0MsR0FBUixnQ0FBK0JSLElBQS9CLE9BQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZJbGlwLVByb2JuaVxcd2FcXHdhLWJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBzdG9yYWdlIGZyb20gJy4vbWVtb3J5X3N0b3JhZ2UnOyAgLy91IHRyZW51dG5vbSBkaXJla3RvcmlqdVxyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpIC8vIGluc3RhbmNpcmFuamUgYXBsaWthY2lqZVxyXG5hcHAudXNlKGNvcnMoKSkgLy9uYSBzdmltIHJ1dGFtYSBvbW9ndWNpbW8gY29ycyAoY3Jvc3Mgb3JpZ2luIHJlc291cmNlIHNoYXJpbmcpXHJcbmNvbnN0IHBvcnQgPSAzMDAwIC8vIHBvcnQgbmEga29qZW0gxIdlIHdlYiBzZXJ2ZXIgc2x1xaFhdGlcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSlcclxuXHJcblxyXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBsZXQgcG9ydWthID0gXCJOYSBsYW5kaW5nIHBhZ2V1IHN0ZS4gSWRpdGUgbmEgL3Bvc3RzIHphIHBvc3RvdmVcIlxyXG4gICAgY29uc29sZS5sb2cocG9ydWthKVxyXG4gICAgcmVzLnNlbmQocG9ydWthKVxyXG5cclxufSk7XHJcblxyXG5hcHAucG9zdCgnL3Bvc3RzJywgKHJlcSxyZXMpID0+e1xyXG4gICAgbGV0IHBvcnVrYSA9IHJlcS5ib2R5XHJcbiAgICBjb25zb2xlLmxvZyhwb3J1a2EpXHJcbiAgICBzdG9yYWdlLnBvc3RzLnB1c2gocG9ydWthKVxyXG4gICAgcmVzLmpzb24oJ09LJylcclxufSk7XHJcblxyXG5cclxuYXBwLmdldCgnL3Bvc3RzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBcclxuICAgIGxldCBwb3N0b3ZpID0gc3RvcmFnZS5wb3N0c1xyXG4gICAgbGV0IHF1ZXJ5ID0gcmVxLnF1ZXJ5XHJcblxyXG4gICAgLy9XQS0yMDZcclxuICAgIGlmKHF1ZXJ5LnRpdGxlKSB7ICAgICAgICAgICAgICAgICAgICAgLy9ha28gamUgcHJlZGFuIHBhcmFtZXRhciB0aXRsZSwgaW5hxI1lIHByaWthenVqIHN2ZVxyXG4gICAgICAgIHBvc3RvdmkgPSBwb3N0b3ZpLmZpbHRlcihlID0+IGUudGl0bGUuaW5kZXhPZihxdWVyeS50aXRsZSkgPj0gMClcclxuICAgIH1cclxuXHJcbiAgICBpZihxdWVyeS5jcmVhdGVkQnkpIHtcclxuICAgICAgICBwb3N0b3ZpID0gcG9zdG92aS5maWx0ZXIoZSA9PiBlLmNyZWF0ZWRCeS5pbmRleE9mKHF1ZXJ5LmNyZWF0ZWRCeSkgPj0gMClcclxuICAgIH1cclxuXHJcbiAgICAvL1dBLTIwN1xyXG4gICAgLy9zaXN0ZW1za2kgYXRyaWJ1dC9pbmRpa2F0b3Iga29qaSBrYXplIGRhIHNlIG1vcmEgcHJldHJheml2YXRpIHBvIGJpbG8gY2VtdVxyXG4gICAgaWYocXVlcnkuX2FueSkge1xyXG4gICAgICAgIGxldCBwcmV0cmFnYSA9IHF1ZXJ5Ll9hbnlcclxuICAgICAgICBsZXQgcG9qbW92aSA9IHByZXRyYWdhLnNwbGl0KFwiIFwiKVxyXG5cclxuICAgICAgICBwb3N0b3ZpID0gcG9zdG92aS5maWx0ZXIocG9zdCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBwb2RhY2kgPSBwb3N0LnRpdGxlICsgcG9zdC5jcmVhdGVkQnlcclxuICAgICAgICAgICAgbGV0IHJlenVsdGF0ID0gcG9qbW92aS5ldmVyeShwb2phbSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcG9kYWNpLmluZGV4T2YocG9qYW0pID49IDBcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgcmV0dXJuIHJlenVsdGF0XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIC8vbmF6YWQgdSBzdG9yYWdlIGRhIGJpIHBvc2xhbyBjaWplbGkgb2JqZWt0IGtvamkgc2FkcsW+aSBwb3N0b3ZlIGkgbWF4XHJcbiAgICBzdG9yYWdlLnBvc3RzID0gcG9zdG92aVxyXG5cclxuICAgIC8vV0EtMjA4XHJcbiAgICAvL3NhbGplIHN2ZSBwb2RhdGtlIG8gc3R1ZGVudHUgcyBuYWp2ZWNpbSBpZC1qZW0gbmEgZnJvbnRlZCwgdGFtbyBpc3Bpc2VtbyBzYW1vIGlkXHJcbiAgICBzdG9yYWdlLm1heCA9IHN0b3JhZ2UucG9zdHMucmVkdWNlKGZ1bmN0aW9uKHByZXYsIGN1cnIpIHtcclxuICAgICAgICByZXR1cm4gcHJldi5pZCA+IGN1cnIuaWQgPyBwcmV2IDogY3VycjtcclxuICAgICAgICB9KTtcclxuICAgIFxyXG5cclxuICAgIHJlcy5qc29uKHN0b3JhZ2UpXHJcbn0pO1xyXG5cclxuLy8gYXBwLmdldCgnL3Bvc3RzJywgKHJlcSwgcmVzKSA9PiB7XHJcbi8vICAgICBsZXQgcXVlcnkgPSByZXEucXVlcnlcclxuLy8gICAgIC8vY29uc29sZS5sb2coXCJQcmV0cmFnYTogXCIsIHRpdGxlKVxyXG5cclxuLy8gICAgIC8vaW5kZXhPZiB2cmHEh2EgaW5kZXggbmEga29qZW0gc2UgbmFsYXppIG5hxaEgdHJhxb5lbmkgc3Vic3RyaW5nXHJcbi8vICAgICBsZXQgcG9zdG92aSA9IHN0b3JhZ2UucG9zdHNcclxuICAgIFxyXG4vLyAgICAgLy9XQS0yMDZcclxuLy8gICAgIGlmKHF1ZXJ5LnRpdGxlKXsgIC8vYWtvIGplIHByZWRhbiBwYXJhbWV0YXIgdGl0bGUsIGluYcSNZSBwcmlrYXp1aiBzdmVcclxuLy8gICAgICAgICBwb3N0b3ZpID0gcG9zdG92aS5maWx0ZXIoZSA9PiB7XHJcbi8vICAgICAgICAgICAgIHJldHVybiAgZS50aXRsZS5pbmRleE9mKHF1ZXJ5LnRpdGxlKSA+PSAwIFxyXG4vLyAgICAgICAgIH0pXHJcbi8vICAgICB9XHJcbiAgICBcclxuLy8gICAgIGlmKHF1ZXJ5LmNyZWF0ZWRCeSl7XHJcbi8vICAgICAgICAgcG9zdG92aSA9IHBvc3RvdmkuZmlsdGVyKGUgPT4ge1xyXG4vLyAgICAgICAgICAgICByZXR1cm4gIGUuY3JlYXRlZEJ5LmluZGV4T2YocXVlcnkuY3JlYXRlZEJ5KSA+PSAwIFxyXG4vLyAgICAgICAgIH0pXHJcbi8vICAgICAgfVxyXG4vLyAgICAgIC8vV0EtMjA3XHJcbi8vICAgICAgLy9zaXN0ZW1za2kgYXRyaWJ1dC9pbmRpa2F0b3Iga29qaSBrYXplIGRhIHNlIG1vcmEgcHJldHJheml2YXRpIHBvIGJpbG8gY2VtdVxyXG4vLyAgICAgIGlmIChxdWVyeS5fYW55KXtcclxuLy8gICAgICAgICBsZXQgcHJldHJhZ2EgPSBxdWVyeS5fYW55XHJcbi8vICAgICAgICAgbGV0IHBvam1vdmkgPSBwcmV0cmFnYS5zcGxpdChcIiBcIilcclxuLy8gICAgICAgICBjb25zb2xlLmxvZyhwb2ptb3ZpKVxyXG4vLyAgICAgIH1cclxuICAgICBcclxuXHJcblxyXG4vLyAgICAgICAvL1dBLTIwOFxyXG4vLyAgICAgbGV0IG1heCA9IHN0b3JhZ2UucG9zdHMucmVkdWNlKGZ1bmN0aW9uKHByZXYsIGN1cnIpIHtcclxuLy8gICAgICAgICByZXR1cm4gcHJldi5pZCA+IGN1cnIuaWQgPyBwcmV2IDogY3VycjtcclxuLy8gICAgIH0pO1xyXG4vLyAgICAgLy9pc3BpcyB1IGJhY2tlbmQga29uem9sdSBrYWQgb3RpZGVtbyBuYSAvcG9zdHMgIHUgYmFja2VuZHUgaWxpIGZyb250ZW5kdVxyXG4vLyAgICAgLy9jb25zb2xlLmxvZyhtYXguaWQpXHJcblxyXG4vLyAgICAgcmVzLmpzb24ocG9zdG92aSlcclxuLy8gICAgIC8vcmVzLmpzb24oe3Bvc3RvdmksIG1heH0pXHJcbiAgICBcclxuICAgXHJcbi8vIH0pO1xyXG5cclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYFNsdcWhYW0gbmEgcG9ydHUgJHtwb3J0fSFgKSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "port",
        "express",
        "json",
        "get",
        "req",
        "res",
        "poruka",
        "console",
        "log",
        "send",
        "post",
        "body",
        "storage",
        "posts",
        "push",
        "postovi",
        "query",
        "title",
        "filter",
        "e",
        "indexOf",
        "createdBy",
        "_any",
        "pretraga",
        "pojmovi",
        "split",
        "podaci",
        "rezultat",
        "every",
        "pojam",
        "max",
        "reduce",
        "prev",
        "curr",
        "id",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AADyC;AAGzC,IAAMA,GAAG,GAAG,0BAAZ,C,CAAsB;;AACtBA,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAAgB;;AAChB,IAAMC,IAAI,GAAG,IAAb,C,CAAkB;;AAClBF,GAAG,CAACC,GAAJ,CAAQE,oBAAQC,IAAR,EAAR;AAGAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,MAAIC,MAAM,GAAG,kDAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,EAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT;AAEH,CALD;AAOAR,GAAG,CAACY,IAAJ,CAAS,QAAT,EAAmB,UAACN,GAAD,EAAKC,GAAL,EAAY;AAC3B,MAAIC,MAAM,GAAGF,GAAG,CAACO,IAAjB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACAM,6BAAQC,KAAR,CAAcC,IAAd,CAAmBR,MAAnB;;AACAD,EAAAA,GAAG,CAACH,IAAJ,CAAS,IAAT;AACH,CALD;AAQAJ,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE5B,MAAIU,OAAO,GAAGH,2BAAQC,KAAtB;AACA,MAAIG,KAAK,GAAGZ,GAAG,CAACY,KAAhB,CAH4B,CAK5B;;AACA,MAAGA,KAAK,CAACC,KAAT,EAAgB;AAAsB;AAClCF,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAe,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACF,KAAF,CAAQG,OAAR,CAAgBJ,KAAK,CAACC,KAAtB,KAAgC,CAApC;AAAA,KAAhB,CAAV;AACH;;AAED,MAAGD,KAAK,CAACK,SAAT,EAAoB;AAChBN,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAe,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACE,SAAF,CAAYD,OAAZ,CAAoBJ,KAAK,CAACK,SAA1B,KAAwC,CAA5C;AAAA,KAAhB,CAAV;AACH,GAZ2B,CAc5B;AACA;;;AACA,MAAGL,KAAK,CAACM,IAAT,EAAe;AACX,QAAIC,QAAQ,GAAGP,KAAK,CAACM,IAArB;AACA,QAAIE,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAd;AAEAV,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAe,UAAAR,IAAI,EAAI;AAC7B,UAAIgB,MAAM,GAAGhB,IAAI,CAACO,KAAL,GAAaP,IAAI,CAACW,SAA/B;AACA,UAAIM,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAc,UAAAC,KAAK,EAAI;AAClC,eAAOH,MAAM,CAACN,OAAP,CAAeS,KAAf,KAAyB,CAAhC;AACH,OAFc,CAAf;AAGA,aAAOF,QAAP;AACH,KANS,CAAV;AAOH,GA3B2B,CA4B5B;;;AACAf,6BAAQC,KAAR,GAAgBE,OAAhB,CA7B4B,CA+B5B;AACA;;AACAH,6BAAQkB,GAAR,GAAclB,2BAAQC,KAAR,CAAckB,MAAd,CAAqB,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACpD,WAAOD,IAAI,CAACE,EAAL,GAAUD,IAAI,CAACC,EAAf,GAAoBF,IAApB,GAA2BC,IAAlC;AACC,GAFS,CAAd;AAKA5B,EAAAA,GAAG,CAACH,IAAJ,CAASU,0BAAT;AACH,CAvCD,E,CAyCA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAGAd,GAAG,CAACqC,MAAJ,CAAWnC,IAAX,EAAiB;AAAA,SAAMO,OAAO,CAACC,GAAR,gCAA+BR,IAA/B,OAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport storage from './memory_storage';  //u trenutnom direktoriju\r\nimport cors from 'cors'\r\n\r\nconst app = express() // instanciranje aplikacije\r\napp.use(cors()) //na svim rutama omogucimo cors (cross origin resource sharing)\r\nconst port = 3000 // port na kojem će web server slušati\r\napp.use(express.json())\r\n\r\n\r\napp.get('/', (req, res) => {\r\n    let poruka = \"Na landing pageu ste. Idite na /posts za postove\"\r\n    console.log(poruka)\r\n    res.send(poruka)\r\n\r\n});\r\n\r\napp.post('/posts', (req,res) =>{\r\n    let poruka = req.body\r\n    console.log(poruka)\r\n    storage.posts.push(poruka)\r\n    res.json('OK')\r\n});\r\n\r\n\r\napp.get('/posts', (req, res) => {\r\n    \r\n    let postovi = storage.posts\r\n    let query = req.query\r\n\r\n    //WA-206\r\n    if(query.title) {                     //ako je predan parametar title, inače prikazuj sve\r\n        postovi = postovi.filter(e => e.title.indexOf(query.title) >= 0)\r\n    }\r\n\r\n    if(query.createdBy) {\r\n        postovi = postovi.filter(e => e.createdBy.indexOf(query.createdBy) >= 0)\r\n    }\r\n\r\n    //WA-207\r\n    //sistemski atribut/indikator koji kaze da se mora pretrazivati po bilo cemu\r\n    if(query._any) {\r\n        let pretraga = query._any\r\n        let pojmovi = pretraga.split(\" \")\r\n\r\n        postovi = postovi.filter(post => {\r\n            let podaci = post.title + post.createdBy\r\n            let rezultat = pojmovi.every(pojam => {\r\n                return podaci.indexOf(pojam) >= 0\r\n            })\r\n            return rezultat\r\n        })\r\n    }\r\n    //nazad u storage da bi poslao cijeli objekt koji sadrži postove i max\r\n    storage.posts = postovi\r\n\r\n    //WA-208\r\n    //salje sve podatke o studentu s najvecim id-jem na fronted, tamo ispisemo samo id\r\n    storage.max = storage.posts.reduce(function(prev, curr) {\r\n        return prev.id > curr.id ? prev : curr;\r\n        });\r\n    \r\n\r\n    res.json(storage)\r\n});\r\n\r\n// app.get('/posts', (req, res) => {\r\n//     let query = req.query\r\n//     //console.log(\"Pretraga: \", title)\r\n\r\n//     //indexOf vraća index na kojem se nalazi naš traženi substring\r\n//     let postovi = storage.posts\r\n    \r\n//     //WA-206\r\n//     if(query.title){  //ako je predan parametar title, inače prikazuj sve\r\n//         postovi = postovi.filter(e => {\r\n//             return  e.title.indexOf(query.title) >= 0 \r\n//         })\r\n//     }\r\n    \r\n//     if(query.createdBy){\r\n//         postovi = postovi.filter(e => {\r\n//             return  e.createdBy.indexOf(query.createdBy) >= 0 \r\n//         })\r\n//      }\r\n//      //WA-207\r\n//      //sistemski atribut/indikator koji kaze da se mora pretrazivati po bilo cemu\r\n//      if (query._any){\r\n//         let pretraga = query._any\r\n//         let pojmovi = pretraga.split(\" \")\r\n//         console.log(pojmovi)\r\n//      }\r\n     \r\n\r\n\r\n//       //WA-208\r\n//     let max = storage.posts.reduce(function(prev, curr) {\r\n//         return prev.id > curr.id ? prev : curr;\r\n//     });\r\n//     //ispis u backend konzolu kad otidemo na /posts  u backendu ili frontendu\r\n//     //console.log(max.id)\r\n\r\n//     res.json(postovi)\r\n//     //res.json({postovi, max})\r\n    \r\n   \r\n// });\r\n\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1585759195288
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\\\\src\\\\memory_storage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\wa\\wa-backend",
      "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\memory_storage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\wa\\wa-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\memory_storage.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\memory_storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\",
        "sourceFileName": "memory_storage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar storage = {\n  posts: [{\n    id: 10001,\n    createdBy: \"nikola@tankovic.me\",\n    postedAt: \"1576599080230\",\n    source: \"https://picsum.photos/id/669/500/500\",\n    title: \"pula more\"\n  }, {\n    id: 10002,\n    createdBy: \"marko@markovic.me\",\n    postedAt: \"1577349684270\",\n    source: \"https://picsum.photos/id/234/500/500\",\n    title: \"zagreb kopno\"\n  }, {\n    id: 10003,\n    createdBy: \"iva@ivkovic.me\",\n    postedAt: \"1577349684270\",\n    source: \"https://picsum.photos/id/12/500/500\",\n    title: \"rijeka luka\"\n  }]\n};\nvar _default = storage;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbW9yeV9zdG9yYWdlLmpzIl0sIm5hbWVzIjpbInN0b3JhZ2UiLCJwb3N0cyIsImlkIiwiY3JlYXRlZEJ5IiwicG9zdGVkQXQiLCJzb3VyY2UiLCJ0aXRsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsT0FBTyxHQUFHO0FBQ1ZDLEVBQUFBLEtBQUssRUFBRSxDQUNQO0FBQ0FDLElBQUFBLEVBQUUsRUFBRSxLQURKO0FBRUFDLElBQUFBLFNBQVMsRUFBRSxvQkFGWDtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsZUFIVjtBQUlBQyxJQUFBQSxNQUFNLEVBQUUsc0NBSlI7QUFLQUMsSUFBQUEsS0FBSyxFQUFFO0FBTFAsR0FETyxFQVFQO0FBQ0FKLElBQUFBLEVBQUUsRUFBRSxLQURKO0FBRUFDLElBQUFBLFNBQVMsRUFBRSxtQkFGWDtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsZUFIVjtBQUlBQyxJQUFBQSxNQUFNLEVBQUUsc0NBSlI7QUFLQUMsSUFBQUEsS0FBSyxFQUFFO0FBTFAsR0FSTyxFQWVQO0FBQ0FKLElBQUFBLEVBQUUsRUFBRSxLQURKO0FBRUFDLElBQUFBLFNBQVMsRUFBRSxnQkFGWDtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsZUFIVjtBQUlBQyxJQUFBQSxNQUFNLEVBQUUscUNBSlI7QUFLQUMsSUFBQUEsS0FBSyxFQUFFO0FBTFAsR0FmTztBQURHLENBQWQ7ZUF5QmtCTixPIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFx3YVxcd2EtYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgc3RvcmFnZSA9IHtcclxuICAgIHBvc3RzOiBbXHJcbiAgICB7XHJcbiAgICBpZDogMTAwMDEsXHJcbiAgICBjcmVhdGVkQnk6IFwibmlrb2xhQHRhbmtvdmljLm1lXCIsXHJcbiAgICBwb3N0ZWRBdDogXCIxNTc2NTk5MDgwMjMwXCIsXHJcbiAgICBzb3VyY2U6IFwiaHR0cHM6Ly9waWNzdW0ucGhvdG9zL2lkLzY2OS81MDAvNTAwXCIsXHJcbiAgICB0aXRsZTogXCJwdWxhIG1vcmVcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICBpZDogMTAwMDIsXHJcbiAgICBjcmVhdGVkQnk6IFwibWFya29AbWFya292aWMubWVcIixcclxuICAgIHBvc3RlZEF0OiBcIjE1NzczNDk2ODQyNzBcIixcclxuICAgIHNvdXJjZTogXCJodHRwczovL3BpY3N1bS5waG90b3MvaWQvMjM0LzUwMC81MDBcIixcclxuICAgIHRpdGxlOiBcInphZ3JlYiBrb3Bub1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgIGlkOiAxMDAwMyxcclxuICAgIGNyZWF0ZWRCeTogXCJpdmFAaXZrb3ZpYy5tZVwiLFxyXG4gICAgcG9zdGVkQXQ6IFwiMTU3NzM0OTY4NDI3MFwiLFxyXG4gICAgc291cmNlOiBcImh0dHBzOi8vcGljc3VtLnBob3Rvcy9pZC8xMi81MDAvNTAwXCIsXHJcbiAgICB0aXRsZTogXCJyaWpla2EgbHVrYVwiLFxyXG4gICAgfVxyXG4gICAgXVxyXG4gICB9XHJcbiAgIGV4cG9ydCBkZWZhdWx0IHN0b3JhZ2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "memory_storage.js"
      ],
      "names": [
        "storage",
        "posts",
        "id",
        "createdBy",
        "postedAt",
        "source",
        "title"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,OAAO,GAAG;AACVC,EAAAA,KAAK,EAAE,CACP;AACAC,IAAAA,EAAE,EAAE,KADJ;AAEAC,IAAAA,SAAS,EAAE,oBAFX;AAGAC,IAAAA,QAAQ,EAAE,eAHV;AAIAC,IAAAA,MAAM,EAAE,sCAJR;AAKAC,IAAAA,KAAK,EAAE;AALP,GADO,EAQP;AACAJ,IAAAA,EAAE,EAAE,KADJ;AAEAC,IAAAA,SAAS,EAAE,mBAFX;AAGAC,IAAAA,QAAQ,EAAE,eAHV;AAIAC,IAAAA,MAAM,EAAE,sCAJR;AAKAC,IAAAA,KAAK,EAAE;AALP,GARO,EAeP;AACAJ,IAAAA,EAAE,EAAE,KADJ;AAEAC,IAAAA,SAAS,EAAE,gBAFX;AAGAC,IAAAA,QAAQ,EAAE,eAHV;AAIAC,IAAAA,MAAM,EAAE,qCAJR;AAKAC,IAAAA,KAAK,EAAE;AALP,GAfO;AADG,CAAd;eAyBkBN,O",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-backend\\src\\",
      "sourcesContent": [
        "let storage = {\r\n    posts: [\r\n    {\r\n    id: 10001,\r\n    createdBy: \"nikola@tankovic.me\",\r\n    postedAt: \"1576599080230\",\r\n    source: \"https://picsum.photos/id/669/500/500\",\r\n    title: \"pula more\",\r\n    },\r\n    {\r\n    id: 10002,\r\n    createdBy: \"marko@markovic.me\",\r\n    postedAt: \"1577349684270\",\r\n    source: \"https://picsum.photos/id/234/500/500\",\r\n    title: \"zagreb kopno\",\r\n    },\r\n    {\r\n    id: 10003,\r\n    createdBy: \"iva@ivkovic.me\",\r\n    postedAt: \"1577349684270\",\r\n    source: \"https://picsum.photos/id/12/500/500\",\r\n    title: \"rijeka luka\",\r\n    }\r\n    ]\r\n   }\r\n   export default storage;"
      ]
    },
    "sourceType": "script",
    "mtime": 1585248337549
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _memory_storage = _interopRequireDefault(require(\"./memory_storage\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _ = require('lodash');\n\nvar app = (0, _express[\"default\"])(); // instanciranje aplikacije\n\napp.use((0, _cors[\"default\"])()); //na svim rutama omogucimo cors (cross origin resource sharing)\n\nvar port = 3000; // port na kojem će web server slušati\n\napp.use(_express[\"default\"].json()); //wa-503\n\nvar checkEmail = function checkEmail(data) {\n  var correctSyntax = '/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/';\n\n  if (data.email == new RegExp(correctSyntax)) {\n    return true;\n  } else return false;\n};\n\nvar checkAttributes = function checkAttributes(data) {\n  if (!checkEmail(data) || !data.createdBy || !data.title || !data.source) {\n    return false;\n  }\n\n  return true;\n};\n\napp.get('/', function (req, res) {\n  var poruka = \"Na landing pageu ste. Idite na /posts za postove\";\n  console.log(poruka);\n  res.send(poruka);\n});\napp.post('/posts', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var db, data, check, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context.sent;\n            data = req.body;\n            data.postedAt = new Date().getTime();\n            delete data._id; //WA-503\n\n            check = checkAttributes(data);\n\n            if (!check) {\n              res.json({\n                status: 'fail',\n                reason: 'incomplete post'\n              });\n            }\n\n            _context.next = 10;\n            return db.collection('posts').insertOne(data);\n\n          case 10:\n            result = _context.sent;\n\n            if (result.insertedCount == 1) {\n              res.json({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.json({\n                status: 'fail'\n              });\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/posts/:id', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var id, db, document;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = req.params.id;\n            _context2.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context2.sent;\n            _context2.next = 6;\n            return db.collection('posts').findOne({\n              _id: _mongodb[\"default\"].ObjectId(id)\n            });\n\n          case 6:\n            document = _context2.sent;\n            res.json(document);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.put('/posts/:id', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var id, db, data, check, result, returnData;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = req.params.id;\n            _context3.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context3.sent;\n            data = req.body;\n            data.postedAt = new Date().getTime();\n            delete data._id;\n            check = checkAttributes(data);\n\n            if (!check) {\n              res.json({\n                status: 'fail',\n                reason: 'incomplete post'\n              });\n            }\n\n            _context3.next = 11;\n            return db.collection('posts').replaceOne({\n              _id: _mongodb[\"default\"].ObjectId(id)\n            }, data);\n\n          case 11:\n            result = _context3.sent;\n\n            if (result.modifiedCount == 1) {\n              returnData = result.ops[0];\n              returnData._id = id;\n              res.json({\n                returnData: returnData\n              });\n            } else {\n              res.json({\n                status: 'fail'\n              });\n            }\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //wa-501\n\napp.get('/post_of_the_day', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var db, count, result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context4.sent;\n            _context4.next = 5;\n            return db.collection(\"posts\").aggregate([{\n              $sample: {\n                size: 1\n              }\n            }]);\n\n          case 5:\n            count = _context4.sent;\n            _context4.next = 8;\n            return count.toArray();\n\n          case 8:\n            result = _context4.sent;\n            //console.log(result)\n            res.json(result);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()), app[\"delete\"]('/posts/:postId/comments/:commentId', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var db, postId, commentId, result;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context5.sent;\n            postId = req.params.postId;\n            commentId = req.params.commentId;\n            _context5.next = 7;\n            return db.collection('posts').updateOne({\n              _id: _mongodb[\"default\"].ObjectId(postId)\n            }, {\n              // sada koristimo mongo direktivu $pull za micanje\n              // vrijednosti iz odabranog arraya `comments`\n              // komentar pretražujemo po _id-u\n              $pull: {\n                comments: {\n                  _id: _mongodb[\"default\"].ObjectId(commentId)\n                }\n              }\n            });\n\n          case 7:\n            result = _context5.sent;\n\n            if (result.modifiedCount == 1) {\n              res.statusCode = 201;\n              res.send();\n            } else {\n              res.statusCode = 500;\n              res.json({\n                status: 'fail'\n              });\n            }\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //WA-601 stjepan verzija s insertom\n\napp.post('/posts/:postId/comments', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var db, comment, postId, result;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context6.sent;\n            comment = req.body;\n            postId = req.params.postId; // datume je ispravnije definirati na backendu\n\n            comment.posted_at = Date.now();\n            _context6.next = 8;\n            return db.collection('comments').insertOne(comment);\n\n          case 8:\n            result = _context6.sent;\n\n            if (result.insertedCount == 1) {\n              res.json({\n                status: 'success',\n                id: comment._id // kao id vraćamo generirani _id\n\n              });\n            } else {\n              res.statusCode = 500;\n              res.json({\n                status: 'fail'\n              });\n            }\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}()); //Wa-602\n\napp.get('/posts/:postId/comments', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var db, postId, filter, cursor, results;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context7.sent;\n            postId = req.params.postId;\n            filter = {\n              postId: parseInt(postId)\n            };\n            _context7.next = 7;\n            return db.collection('comments').find(filter);\n\n          case 7:\n            cursor = _context7.sent;\n            _context7.next = 10;\n            return cursor.toArray();\n\n          case 10:\n            results = _context7.sent;\n            console.log(results);\n            res.json(results);\n\n          case 13:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}());\n/*\r\napp.post('/posts/:postId/comments', async (req, res) => {\r\n    let db = await connect();\r\n    let doc = req.body;\r\n    let postId = req.params.postId;\r\n\r\n    // u mongu dokumenti unutar postojećih dokumenata ne dobivaju\r\n    // automatski novi _id, pa ga moramo sami dodati\r\n    doc._id = mongo.ObjectId();\r\n    // datume je ispravnije definirati na backendu\r\n    doc.posted_at = Date.now();\r\n    \r\n    let result = await db.collection('posts').updateOne(\r\n    { _id: mongo.ObjectId(postId) },\r\n    {\r\n    // operacija $push dodaje novu vrijednost u\r\n    // atribut `comments`, a ako on ne postoji\r\n    // automatski ga stvara i postavlja na []\r\n    $push: { comments: doc },\r\n        }\r\n    );\r\n    if (result.modifiedCount == 1) {\r\n        res.json({\r\n        status: 'success',\r\n        id: doc._id, // kao id vraćamo generirani _id\r\n        });\r\n    } else {\r\n        res.statusCode = 500;\r\n        res.json({\r\n            status: 'fail',\r\n            });\r\n        }\r\n    });\r\n*/\n\napp.get('/posts', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var db, query, filter, pretraga, terms, atributi, cursor, results;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context8.sent;\n            query = req.query;\n            filter = {};\n\n            if (query._any) {\n              console.log('q:', query._any);\n              pretraga = query._any;\n              terms = pretraga.split(' ');\n              console.log('asda');\n              atributi = [\"title\", \"createdBy\", \"postedAt\"]; // ...\n\n              filter = {\n                $and: []\n              };\n              terms.forEach(function (term) {\n                var or = {\n                  $or: []\n                };\n                atributi.forEach(function (atribut) {\n                  or.$or.push(_defineProperty({}, atribut, new RegExp(term)));\n                });\n                filter.$and.push(or);\n              });\n            }\n\n            console.log('filter:', filter);\n            _context8.next = 9;\n            return db.collection(\"posts\").find(filter);\n\n          case 9:\n            cursor = _context8.sent;\n            _context8.next = 12;\n            return cursor.toArray();\n\n          case 12:\n            results = _context8.sent;\n            res.json(results);\n\n          case 14:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}()), app.patch('/posts/:id', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var doc, id, db, result;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            doc = req.body;\n            delete doc._id;\n            id = req.params.id;\n            _context9.next = 5;\n            return (0, _db[\"default\"])();\n\n          case 5:\n            db = _context9.sent;\n            _context9.next = 8;\n            return db.collection('posts').updateOne({\n              _id: _mongodb[\"default\"].ObjectId(id)\n            }, {\n              $set: doc\n            });\n\n          case 8:\n            result = _context9.sent;\n\n            if (result.modifiedCount == 1) {\n              res.json({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.json({\n                status: 'fail'\n              });\n            }\n\n          case 10:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}());\napp.get('/posts_memory', function (req, res) {\n  var postovi = _memory_storage[\"default\"].posts;\n  var query = req.query;\n\n  if (query.title) {\n    //ako je predan parametar title, inače prikazuj sve\n    postovi = postovi.filter(function (e) {\n      return e.title.indexOf(query.title) >= 0;\n    });\n  }\n\n  if (query.createdBy) {\n    postovi = postovi.filter(function (e) {\n      return e.createdBy.indexOf(query.createdBy) >= 0;\n    });\n  } //sistemski atribut/indikator koji kaze da se mora pretrazivati po bilo cemu\n\n\n  if (query._any) {\n    var pretraga = query._any;\n    var pojmovi = pretraga.split(\" \");\n    postovi = postovi.filter(function (post) {\n      var podaci = post.title + post.createdBy;\n      var rezultat = pojmovi.every(function (pojam) {\n        return podaci.indexOf(pojam) >= 0;\n      });\n      return rezultat;\n    });\n  }\n\n  res.json(postovi);\n});\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "_",
        "require",
        "app",
        "use",
        "port",
        "express",
        "json",
        "checkEmail",
        "data",
        "correctSyntax",
        "email",
        "RegExp",
        "checkAttributes",
        "createdBy",
        "title",
        "source",
        "get",
        "req",
        "res",
        "poruka",
        "console",
        "log",
        "send",
        "post",
        "db",
        "body",
        "postedAt",
        "Date",
        "getTime",
        "_id",
        "check",
        "status",
        "reason",
        "collection",
        "insertOne",
        "result",
        "insertedCount",
        "id",
        "insertedId",
        "params",
        "findOne",
        "mongo",
        "ObjectId",
        "document",
        "put",
        "replaceOne",
        "modifiedCount",
        "returnData",
        "ops",
        "aggregate",
        "$sample",
        "size",
        "count",
        "toArray",
        "postId",
        "commentId",
        "updateOne",
        "$pull",
        "comments",
        "statusCode",
        "comment",
        "posted_at",
        "now",
        "filter",
        "parseInt",
        "find",
        "cursor",
        "results",
        "query",
        "_any",
        "pretraga",
        "terms",
        "split",
        "atributi",
        "$and",
        "forEach",
        "term",
        "or",
        "$or",
        "atribut",
        "push",
        "patch",
        "doc",
        "$set",
        "postovi",
        "storage",
        "posts",
        "e",
        "indexOf",
        "pojmovi",
        "podaci",
        "rezultat",
        "every",
        "pojam",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AAEA,IAAMC,GAAG,GAAG,0BAAZ,C,CAAsB;;AACtBA,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAAgB;;AAChB,IAAMC,IAAI,GAAG,IAAb,C,CAAkB;;AAClBF,GAAG,CAACC,GAAJ,CAAQE,oBAAQC,IAAR,EAAR,E,CAGA;;AACA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAS;AACtB,MAAIC,aAAa,GAAG,0JAApB;;AACA,MAAID,IAAI,CAACE,KAAL,IAAc,IAAIC,MAAJ,CAAWF,aAAX,CAAlB,EAA4C;AACxC,WAAO,IAAP;AACH,GAFD,MAGK,OAAO,KAAP;AACR,CAND;;AAQA,IAAIG,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,IAAD,EAAS;AAC3B,MAAI,CAACD,UAAU,CAACC,IAAD,CAAX,IAAqB,CAACA,IAAI,CAACK,SAA3B,IAAwC,CAACL,IAAI,CAACM,KAA9C,IAAuD,CAACN,IAAI,CAACO,MAAjE,EAAwE;AACpE,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,CALD;;AAOAb,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,MAAIC,MAAM,GAAG,kDAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,EAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT;AAEH,CALD;AAOAjB,GAAG,CAACqB,IAAJ,CAAS,QAAT;AAAA,qEAAmB,iBAAON,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA,qBADA;;AAAA;AACXM,YAAAA,EADW;AAEXhB,YAAAA,IAFW,GAEJS,GAAG,CAACQ,IAFA;AAGfjB,YAAAA,IAAI,CAACkB,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;AAEA,mBAAOpB,IAAI,CAACqB,GAAZ,CALe,CAMf;;AACIC,YAAAA,KAPW,GAOHlB,eAAe,CAACJ,IAAD,CAPZ;;AAQf,gBAAI,CAACsB,KAAL,EAAY;AACRZ,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE,MADH;AAELC,gBAAAA,MAAM,EAAE;AAFH,eAAT;AAID;;AAbY;AAAA,mBAeIR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,SAAvB,CAAiC1B,IAAjC,CAfJ;;AAAA;AAeX2B,YAAAA,MAfW;;AAiBf,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BlB,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE,SADH;AAELM,gBAAAA,EAAE,EAAEF,MAAM,CAACG;AAFN,eAAT;AAIH,aALD,MAKO;AACCpB,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGC;;AA1BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AA6BA7B,GAAG,CAACc,GAAJ,CAAQ,YAAR;AAAA,sEAAsB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACdmB,YAAAA,EADc,GACTpB,GAAG,CAACsB,MAAJ,CAAWF,EADF;AAAA;AAAA,mBAEH,qBAFG;;AAAA;AAEdb,YAAAA,EAFc;AAAA;AAAA,mBAGGA,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBO,OAAvB,CAA+B;AAAEX,cAAAA,GAAG,EAAEY,oBAAMC,QAAN,CAAeL,EAAf;AAAP,aAA/B,CAHH;;AAAA;AAGdM,YAAAA,QAHc;AAKlBzB,YAAAA,GAAG,CAACZ,IAAJ,CAASqC,QAAT;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAUAzC,GAAG,CAAC0C,GAAJ,CAAQ,YAAR;AAAA,sEAAsB,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACdmB,YAAAA,EADc,GACTpB,GAAG,CAACsB,MAAJ,CAAWF,EADF;AAAA;AAAA,mBAEH,qBAFG;;AAAA;AAEdb,YAAAA,EAFc;AAGdhB,YAAAA,IAHc,GAGPS,GAAG,CAACQ,IAHG;AAIlBjB,YAAAA,IAAI,CAACkB,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;AACA,mBAAOpB,IAAI,CAACqB,GAAZ;AACIC,YAAAA,KANc,GAMNlB,eAAe,CAACJ,IAAD,CANT;;AAOlB,gBAAI,CAACsB,KAAL,EAAY;AACRZ,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE,MADH;AAELC,gBAAAA,MAAM,EAAE;AAFH,eAAT;AAID;;AAZe;AAAA,mBAcCR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBY,UAAvB,CAAkC;AAAEhB,cAAAA,GAAG,EAAEY,oBAAMC,QAAN,CAAeL,EAAf;AAAP,aAAlC,EAA+D7B,IAA/D,CAdD;;AAAA;AAcd2B,YAAAA,MAdc;;AAelB,gBAAIA,MAAM,CAACW,aAAP,IAAwB,CAA5B,EAA+B;AACvBC,cAAAA,UADuB,GACVZ,MAAM,CAACa,GAAP,CAAW,CAAX,CADU;AAE3BD,cAAAA,UAAU,CAAClB,GAAX,GAAiBQ,EAAjB;AACAnB,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AAAEyC,gBAAAA,UAAU,EAAVA;AAAF,eAAT;AACH,aAJD,MAIO;AACC7B,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGC;;AAvBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA,K,CA0BA;;AACA7B,GAAG,CAACc,GAAJ,CAAQ,kBAAR;AAAA,sEAA4B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACT,qBADS;;AAAA;AACpBM,YAAAA,EADoB;AAAA;AAAA,mBASNA,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBgB,SAAvB,CAAiC,CAAC;AAAEC,cAAAA,OAAO,EAAE;AAACC,gBAAAA,IAAI,EAAG;AAAR;AAAX,aAAD,CAAjC,CATM;;AAAA;AASpBC,YAAAA,KAToB;AAAA;AAAA,mBAULA,KAAK,CAACC,OAAN,EAVK;;AAAA;AAUpBlB,YAAAA,MAVoB;AAWxB;AACAjB,YAAAA,GAAG,CAACZ,IAAJ,CAAS6B,MAAT;;AAZwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA,MAgBAjC,GAAG,UAAH,CAAW,oCAAX;AAAA,sEAAiD,kBAAOe,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC9B,qBAD8B;;AAAA;AACzCM,YAAAA,EADyC;AAEzC8B,YAAAA,MAFyC,GAEhCrC,GAAG,CAACsB,MAAJ,CAAWe,MAFqB;AAGzCC,YAAAA,SAHyC,GAG7BtC,GAAG,CAACsB,MAAJ,CAAWgB,SAHkB;AAAA;AAAA,mBAK1B/B,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBuB,SAAvB,CACf;AAAE3B,cAAAA,GAAG,EAAEY,oBAAMC,QAAN,CAAeY,MAAf;AAAP,aADe,EAEf;AACA;AACA;AACA;AACAG,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,QAAQ,EAAE;AAAE7B,kBAAAA,GAAG,EAAEY,oBAAMC,QAAN,CAAea,SAAf;AAAP;AAAZ;AAJP,aAFe,CAL0B;;AAAA;AAKzCpB,YAAAA,MALyC;;AAc7C,gBAAIA,MAAM,CAACW,aAAP,IAAwB,CAA5B,EAA+B;AAC3B5B,cAAAA,GAAG,CAACyC,UAAJ,GAAiB,GAAjB;AACAzC,cAAAA,GAAG,CAACI,IAAJ;AACH,aAHD,MAGO;AACHJ,cAAAA,GAAG,CAACyC,UAAJ,GAAiB,GAAjB;AACAzC,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACTyB,gBAAAA,MAAM,EAAE;AADC,eAAT;AAGF;;AAtB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjD;;AAAA;AAAA;AAAA;AAAA,IAhBA,C,CAyCA;;AACA7B,GAAG,CAACqB,IAAJ,CAAS,yBAAT;AAAA,sEAAoC,kBAAON,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACjB,qBADiB;;AAAA;AAC5BM,YAAAA,EAD4B;AAE5BoC,YAAAA,OAF4B,GAElB3C,GAAG,CAACQ,IAFc;AAG5B6B,YAAAA,MAH4B,GAGnBrC,GAAG,CAACsB,MAAJ,CAAWe,MAHQ,EAKhC;;AACAM,YAAAA,OAAO,CAACC,SAAR,GAAoBlC,IAAI,CAACmC,GAAL,EAApB;AANgC;AAAA,mBAQbtC,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoC0B,OAApC,CARa;;AAAA;AAQ5BzB,YAAAA,MAR4B;;AAUhC,gBAAIA,MAAM,CAACC,aAAP,IAAwB,CAA5B,EAA+B;AAC3BlB,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE,SADH;AAELM,gBAAAA,EAAE,EAAEuB,OAAO,CAAC/B,GAFP,CAEY;;AAFZ,eAAT;AAIH,aALD,MAMK;AACDX,cAAAA,GAAG,CAACyC,UAAJ,GAAiB,GAAjB;AACAzC,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGH;;AArB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA,K,CAwBA;;AACA7B,GAAG,CAACc,GAAJ,CAAQ,yBAAR;AAAA,sEAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAChB,qBADgB;;AAAA;AAC3BM,YAAAA,EAD2B;AAE3B8B,YAAAA,MAF2B,GAElBrC,GAAG,CAACsB,MAAJ,CAAWe,MAFO;AAI3BS,YAAAA,MAJ2B,GAIlB;AACTT,cAAAA,MAAM,EAAEU,QAAQ,CAACV,MAAD;AADP,aAJkB;AAAA;AAAA,mBAQZ9B,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BgC,IAA1B,CAA+BF,MAA/B,CARY;;AAAA;AAQ3BG,YAAAA,MAR2B;AAAA;AAAA,mBASXA,MAAM,CAACb,OAAP,EATW;;AAAA;AAS3Bc,YAAAA,OAT2B;AAU/B/C,YAAAA,OAAO,CAACC,GAAR,CAAY8C,OAAZ;AAEAjD,YAAAA,GAAG,CAACZ,IAAJ,CAAS6D,OAAT;;AAZ+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCAjE,GAAG,CAACc,GAAJ,CAAQ,QAAR;AAAA,sEAAkB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,qBADD;;AAAA;AACVM,YAAAA,EADU;AAEV4C,YAAAA,KAFU,GAEFnD,GAAG,CAACmD,KAFF;AAGVL,YAAAA,MAHU,GAGD,EAHC;;AAMd,gBAAIK,KAAK,CAACC,IAAV,EAAe;AACXjD,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB+C,KAAK,CAACC,IAAxB;AACIC,cAAAA,QAFO,GAEIF,KAAK,CAACC,IAFV;AAGPE,cAAAA,KAHO,GAGCD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAHD;AAIXpD,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACIoD,cAAAA,QALO,GAKI,CAAC,OAAD,EAAU,WAAV,EAAuB,UAAvB,CALJ,EAKuC;;AAClDV,cAAAA,MAAM,GAAG;AACLW,gBAAAA,IAAI,EAAE;AADD,eAAT;AAIAH,cAAAA,KAAK,CAACI,OAAN,CAAc,UAACC,IAAD,EAAS;AACnB,oBAAIC,EAAE,GAAE;AACJC,kBAAAA,GAAG,EAAE;AADD,iBAAR;AAIAL,gBAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAI,OAAO,EAAG;AACvBF,kBAAAA,EAAE,CAACC,GAAH,CAAOE,IAAP,qBAAcD,OAAd,EAAwB,IAAIpE,MAAJ,CAAWiE,IAAX,CAAxB;AAEH,iBAHD;AAKAb,gBAAAA,MAAM,CAACW,IAAP,CAAYM,IAAZ,CAAiBH,EAAjB;AACH,eAXD;AAYH;;AAEDzD,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB0C,MAAvB;AA9Bc;AAAA,mBAgCKvC,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBgC,IAAvB,CAA4BF,MAA5B,CAhCL;;AAAA;AAgCVG,YAAAA,MAhCU;AAAA;AAAA,mBAkCMA,MAAM,CAACb,OAAP,EAlCN;;AAAA;AAkCVc,YAAAA,OAlCU;AAoCdjD,YAAAA,GAAG,CAACZ,IAAJ,CAAS6D,OAAT;;AApCc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,MAwCAjE,GAAG,CAAC+E,KAAJ,CAAU,YAAV;AAAA,sEAAwB,kBAAOhE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBgE,YAAAA,GADgB,GACVjE,GAAG,CAACQ,IADM;AAEpB,mBAAOyD,GAAG,CAACrD,GAAX;AACIQ,YAAAA,EAHgB,GAGXpB,GAAG,CAACsB,MAAJ,CAAWF,EAHA;AAAA;AAAA,mBAIL,qBAJK;;AAAA;AAIhBb,YAAAA,EAJgB;AAAA;AAAA,mBAKDA,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBuB,SAAvB,CACf;AAAE3B,cAAAA,GAAG,EAAEY,oBAAMC,QAAN,CAAeL,EAAf;AAAP,aADe,EAEf;AACK8C,cAAAA,IAAI,EAAED;AADX,aAFe,CALC;;AAAA;AAKhB/C,YAAAA,MALgB;;AAWpB,gBAAIA,MAAM,CAACW,aAAP,IAAwB,CAA5B,EAA+B;AAC3B5B,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE,SADH;AAELM,gBAAAA,EAAE,EAAEF,MAAM,CAACG;AAFN,eAAT;AAIH,aALD,MAKO;AACHpB,cAAAA,GAAG,CAACZ,IAAJ,CAAS;AACLyB,gBAAAA,MAAM,EAAE;AADH,eAAT;AAGC;;AApBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,IAxCA;AAgEG7B,GAAG,CAACc,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEtC,MAAIkE,OAAO,GAAGC,2BAAQC,KAAtB;AACA,MAAIlB,KAAK,GAAGnD,GAAG,CAACmD,KAAhB;;AAEA,MAAGA,KAAK,CAACtD,KAAT,EAAgB;AAAsB;AAClCsE,IAAAA,OAAO,GAAGA,OAAO,CAACrB,MAAR,CAAe,UAAAwB,CAAC;AAAA,aAAIA,CAAC,CAACzE,KAAF,CAAQ0E,OAAR,CAAgBpB,KAAK,CAACtD,KAAtB,KAAgC,CAApC;AAAA,KAAhB,CAAV;AACH;;AAED,MAAGsD,KAAK,CAACvD,SAAT,EAAoB;AAChBuE,IAAAA,OAAO,GAAGA,OAAO,CAACrB,MAAR,CAAe,UAAAwB,CAAC;AAAA,aAAIA,CAAC,CAAC1E,SAAF,CAAY2E,OAAZ,CAAoBpB,KAAK,CAACvD,SAA1B,KAAwC,CAA5C;AAAA,KAAhB,CAAV;AACH,GAXqC,CAatC;;;AACA,MAAGuD,KAAK,CAACC,IAAT,EAAe;AAEX,QAAIC,QAAQ,GAAGF,KAAK,CAACC,IAArB;AACA,QAAIoB,OAAO,GAAGnB,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAd;AAEAY,IAAAA,OAAO,GAAGA,OAAO,CAACrB,MAAR,CAAe,UAAAxC,IAAI,EAAI;AAC7B,UAAImE,MAAM,GAAGnE,IAAI,CAACT,KAAL,GAAaS,IAAI,CAACV,SAA/B;AACA,UAAI8E,QAAQ,GAAGF,OAAO,CAACG,KAAR,CAAc,UAAAC,KAAK,EAAI;AAClC,eAAOH,MAAM,CAACF,OAAP,CAAeK,KAAf,KAAyB,CAAhC;AACH,OAFc,CAAf;AAGA,aAAOF,QAAP;AACH,KANS,CAAV;AAOH;;AAEDzE,EAAAA,GAAG,CAACZ,IAAJ,CAAS8E,OAAT;AACH,CA7BE;AAiCHlF,GAAG,CAAC4F,MAAJ,CAAW1F,IAAX,EAAiB;AAAA,SAAMgB,OAAO,CAACC,GAAR,gCAA+BjB,IAA/B,OAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport storage from './memory_storage';  //u trenutnom direktoriju\r\nimport cors from 'cors'\r\nimport connect from './db.js'\r\nimport mongo from 'mongodb';\r\nvar _ = require('lodash');\r\n\r\nconst app = express() // instanciranje aplikacije\r\napp.use(cors()) //na svim rutama omogucimo cors (cross origin resource sharing)\r\nconst port = 3000 // port na kojem će web server slušati\r\napp.use(express.json())\r\n\r\n\r\n//wa-503\r\nlet checkEmail = (data) =>{\r\n    let correctSyntax = '/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/'\r\n    if (data.email == new RegExp(correctSyntax)){\r\n        return true\r\n    }\r\n    else return false;\r\n}\r\n\r\nlet checkAttributes = (data) =>{\r\n    if (!checkEmail(data) || !data.createdBy || !data.title || !data.source){\r\n        return false\r\n    }\r\n    return true;\r\n}\r\n\r\napp.get('/', (req, res) => {\r\n    let poruka = \"Na landing pageu ste. Idite na /posts za postove\"\r\n    console.log(poruka)\r\n    res.send(poruka)\r\n\r\n});\r\n\r\napp.post('/posts', async (req, res) => {\r\n    let db = await connect();\r\n    let data = req.body;\r\n    data.postedAt = new Date().getTime();\r\n\r\n    delete data._id;\r\n    //WA-503\r\n    let check = checkAttributes(data)\r\n    if (!check) {\r\n        res.json({\r\n            status: 'fail',\r\n            reason: 'incomplete post'\r\n          });\r\n      } \r\n\r\n    let result = await db.collection('posts').insertOne(data);\r\n\r\n    if (result.insertedCount == 1) {\r\n        res.json({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } else {\r\n            res.json({\r\n                status: 'fail',\r\n                });\r\n            }\r\n});\r\n\r\napp.get('/posts/:id', async (req, res) => {\r\n    let id = req.params.id;\r\n    let db = await connect();\r\n    let document = await db.collection('posts').findOne({ _id: mongo.ObjectId(id) });\r\n\r\n    res.json(document);\r\n});\r\n\r\n\r\n\r\napp.put('/posts/:id', async (req, res) => {\r\n    let id = req.params.id;\r\n    let db = await connect();\r\n    let data = req.body\r\n    data.postedAt = new Date().getTime();\r\n    delete data._id;\r\n    let check = checkAttributes(data)\r\n    if (!check) {\r\n        res.json({\r\n            status: 'fail',\r\n            reason: 'incomplete post'\r\n          });\r\n      } \r\n\r\n    let result = await db.collection('posts').replaceOne({ _id: mongo.ObjectId(id) }, data);\r\n    if (result.modifiedCount == 1) {\r\n        let returnData = result.ops[0];\r\n        returnData._id = id;\r\n        res.json({ returnData });\r\n    } else {\r\n            res.json({\r\n                status: 'fail',\r\n                });\r\n            }\r\n});\r\n\r\n//wa-501\r\napp.get('/post_of_the_day', async (req, res) => {\r\n    let db = await connect()\r\n\r\n     /* 1. način */\r\n    // let count = await db.collection(\"posts\").countDocuments();\r\n    // let rand = Math.floor(Math.random() * count );\r\n    // let randPost= await db.collection(\"posts\").findOne({postNumber : rand})\r\n\r\n    /* 2. način */\r\n    let count = await db.collection(\"posts\").aggregate([{ $sample: {size : 1}}])\r\n    let result = await count.toArray()\r\n    //console.log(result)\r\n    res.json(result);\r\n\r\n}),\r\n\r\napp.delete('/posts/:postId/comments/:commentId', async (req, res) => {\r\n    let db = await connect();\r\n    let postId = req.params.postId;\r\n    let commentId = req.params.commentId;\r\n\r\n    let result = await db.collection('posts').updateOne(\r\n        { _id: mongo.ObjectId(postId) },\r\n        {\r\n        // sada koristimo mongo direktivu $pull za micanje\r\n        // vrijednosti iz odabranog arraya `comments`\r\n        // komentar pretražujemo po _id-u\r\n        $pull: { comments: { _id: mongo.ObjectId(commentId) } },\r\n        }\r\n    );\r\n    if (result.modifiedCount == 1) {\r\n        res.statusCode = 201;\r\n        res.send();\r\n    } else {\r\n        res.statusCode = 500;\r\n        res.json({\r\n        status: 'fail',\r\n        });\r\n     }\r\n   });\r\n\r\n//WA-601 stjepan verzija s insertom\r\napp.post('/posts/:postId/comments', async (req, res) => {\r\n    let db = await connect();\r\n    let comment = req.body;\r\n    let postId = req.params.postId;\r\n\r\n    // datume je ispravnije definirati na backendu\r\n    comment.posted_at = Date.now();\r\n    \r\n    let result = await db.collection('comments').insertOne(comment);\r\n\r\n    if (result.insertedCount == 1) {\r\n        res.json({\r\n            status: 'success',\r\n            id: comment._id, // kao id vraćamo generirani _id\r\n        });\r\n    } \r\n    else {\r\n        res.statusCode = 500;\r\n        res.json({\r\n            status: 'fail',\r\n        });\r\n    }\r\n});\r\n\r\n//Wa-602\r\napp.get('/posts/:postId/comments', async (req, res) => {\r\n    let db = await connect();\r\n    let postId = req.params.postId;\r\n\r\n    let filter = {\r\n        postId: parseInt(postId)\r\n    }    \r\n\r\n    let cursor = await db.collection('comments').find(filter);\r\n    let results = await cursor.toArray();\r\n    console.log(results)\r\n\r\n    res.json(results);\r\n})\r\n\r\n\r\n\r\n/*\r\napp.post('/posts/:postId/comments', async (req, res) => {\r\n    let db = await connect();\r\n    let doc = req.body;\r\n    let postId = req.params.postId;\r\n\r\n    // u mongu dokumenti unutar postojećih dokumenata ne dobivaju\r\n    // automatski novi _id, pa ga moramo sami dodati\r\n    doc._id = mongo.ObjectId();\r\n    // datume je ispravnije definirati na backendu\r\n    doc.posted_at = Date.now();\r\n    \r\n    let result = await db.collection('posts').updateOne(\r\n    { _id: mongo.ObjectId(postId) },\r\n    {\r\n    // operacija $push dodaje novu vrijednost u\r\n    // atribut `comments`, a ako on ne postoji\r\n    // automatski ga stvara i postavlja na []\r\n    $push: { comments: doc },\r\n        }\r\n    );\r\n    if (result.modifiedCount == 1) {\r\n        res.json({\r\n        status: 'success',\r\n        id: doc._id, // kao id vraćamo generirani _id\r\n        });\r\n    } else {\r\n        res.statusCode = 500;\r\n        res.json({\r\n            status: 'fail',\r\n            });\r\n        }\r\n    });\r\n*/\r\n\r\n\r\napp.get('/posts', async (req, res) => {\r\n    let db = await connect()\r\n    let query = req.query\r\n    let filter = {}\r\n    \r\n    \r\n    if (query._any){\r\n        console.log('q:', query._any)\r\n        let pretraga = query._any\r\n        let terms = pretraga.split(' ')\r\n        console.log('asda')\r\n        let atributi = [\"title\", \"createdBy\", \"postedAt\"] // ...\r\n        filter = {\r\n            $and: [],\r\n        };\r\n    \r\n        terms.forEach((term) =>{\r\n            let or ={\r\n                $or: []\r\n            };\r\n    \r\n            atributi.forEach(atribut =>{\r\n                or.$or.push({[atribut]: new RegExp(term) });\r\n                \r\n            })\r\n            \r\n            filter.$and.push(or);\r\n        });\r\n    }\r\n     \r\n    console.log('filter:', filter)\r\n\r\n    let cursor = await db.collection(\"posts\").find(filter)\r\n        \r\n    let results = await cursor.toArray()\r\n\r\n    res.json(results)\r\n   }),\r\n\r\n\r\napp.patch('/posts/:id', async (req, res) => {\r\n    let doc = req.body;\r\n    delete doc._id;\r\n    let id = req.params.id;\r\n    let db = await connect();\r\n    let result = await db.collection('posts').updateOne(\r\n        { _id: mongo.ObjectId(id) },\r\n        {\r\n             $set: doc,\r\n        }\r\n    );\r\n    if (result.modifiedCount == 1) {\r\n        res.json({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } else {\r\n        res.json({\r\n            status: 'fail',\r\n            });\r\n        }\r\n});\r\n           \r\n\r\n   app.get('/posts_memory', (req, res) => {\r\n    \r\n    let postovi = storage.posts\r\n    let query = req.query\r\n\r\n    if(query.title) {                     //ako je predan parametar title, inače prikazuj sve\r\n        postovi = postovi.filter(e => e.title.indexOf(query.title) >= 0)\r\n    }\r\n\r\n    if(query.createdBy) {\r\n        postovi = postovi.filter(e => e.createdBy.indexOf(query.createdBy) >= 0)\r\n    }\r\n\r\n    //sistemski atribut/indikator koji kaze da se mora pretrazivati po bilo cemu\r\n    if(query._any) {\r\n        \r\n        let pretraga = query._any\r\n        let pojmovi = pretraga.split(\" \")\r\n\r\n        postovi = postovi.filter(post => {\r\n            let podaci = post.title + post.createdBy\r\n            let rezultat = pojmovi.every(pojam => {\r\n                return podaci.indexOf(pojam) >= 0\r\n            })\r\n            return rezultat\r\n        })\r\n    }\r\n   \r\n    res.json(postovi)\r\n});\r\n\r\n\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1588541724885
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\memory_storage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\memory_storage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\memory_storage.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\memory_storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
        "sourceFileName": "memory_storage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar storage = {\n  posts: [{\n    id: 10001,\n    createdBy: \"nikola@tankovic.me\",\n    postedAt: \"1576599080230\",\n    source: \"https://picsum.photos/id/669/500/500\",\n    title: \"pula more\"\n  }, {\n    id: 10002,\n    createdBy: \"marko@markovic.me\",\n    postedAt: \"1577349684270\",\n    source: \"https://picsum.photos/id/234/500/500\",\n    title: \"zagreb kopno\"\n  }, {\n    id: 10003,\n    createdBy: \"iva@ivkovic.me\",\n    postedAt: \"1577349684270\",\n    source: \"https://picsum.photos/id/12/500/500\",\n    title: \"rijeka luka\"\n  }]\n};\nvar _default = storage;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbW9yeV9zdG9yYWdlLmpzIl0sIm5hbWVzIjpbInN0b3JhZ2UiLCJwb3N0cyIsImlkIiwiY3JlYXRlZEJ5IiwicG9zdGVkQXQiLCJzb3VyY2UiLCJ0aXRsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsT0FBTyxHQUFHO0FBQ1ZDLEVBQUFBLEtBQUssRUFBRSxDQUNQO0FBQ0FDLElBQUFBLEVBQUUsRUFBRSxLQURKO0FBRUFDLElBQUFBLFNBQVMsRUFBRSxvQkFGWDtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsZUFIVjtBQUlBQyxJQUFBQSxNQUFNLEVBQUUsc0NBSlI7QUFLQUMsSUFBQUEsS0FBSyxFQUFFO0FBTFAsR0FETyxFQVFQO0FBQ0FKLElBQUFBLEVBQUUsRUFBRSxLQURKO0FBRUFDLElBQUFBLFNBQVMsRUFBRSxtQkFGWDtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsZUFIVjtBQUlBQyxJQUFBQSxNQUFNLEVBQUUsc0NBSlI7QUFLQUMsSUFBQUEsS0FBSyxFQUFFO0FBTFAsR0FSTyxFQWVQO0FBQ0FKLElBQUFBLEVBQUUsRUFBRSxLQURKO0FBRUFDLElBQUFBLFNBQVMsRUFBRSxnQkFGWDtBQUdBQyxJQUFBQSxRQUFRLEVBQUUsZUFIVjtBQUlBQyxJQUFBQSxNQUFNLEVBQUUscUNBSlI7QUFLQUMsSUFBQUEsS0FBSyxFQUFFO0FBTFAsR0FmTztBQURHLENBQWQ7ZUF5QmtCTixPIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFx3YVxcd2Etd1xcd2EtYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgc3RvcmFnZSA9IHtcclxuICAgIHBvc3RzOiBbXHJcbiAgICB7XHJcbiAgICBpZDogMTAwMDEsXHJcbiAgICBjcmVhdGVkQnk6IFwibmlrb2xhQHRhbmtvdmljLm1lXCIsXHJcbiAgICBwb3N0ZWRBdDogXCIxNTc2NTk5MDgwMjMwXCIsXHJcbiAgICBzb3VyY2U6IFwiaHR0cHM6Ly9waWNzdW0ucGhvdG9zL2lkLzY2OS81MDAvNTAwXCIsXHJcbiAgICB0aXRsZTogXCJwdWxhIG1vcmVcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICBpZDogMTAwMDIsXHJcbiAgICBjcmVhdGVkQnk6IFwibWFya29AbWFya292aWMubWVcIixcclxuICAgIHBvc3RlZEF0OiBcIjE1NzczNDk2ODQyNzBcIixcclxuICAgIHNvdXJjZTogXCJodHRwczovL3BpY3N1bS5waG90b3MvaWQvMjM0LzUwMC81MDBcIixcclxuICAgIHRpdGxlOiBcInphZ3JlYiBrb3Bub1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgIGlkOiAxMDAwMyxcclxuICAgIGNyZWF0ZWRCeTogXCJpdmFAaXZrb3ZpYy5tZVwiLFxyXG4gICAgcG9zdGVkQXQ6IFwiMTU3NzM0OTY4NDI3MFwiLFxyXG4gICAgc291cmNlOiBcImh0dHBzOi8vcGljc3VtLnBob3Rvcy9pZC8xMi81MDAvNTAwXCIsXHJcbiAgICB0aXRsZTogXCJyaWpla2EgbHVrYVwiLFxyXG4gICAgfVxyXG4gICAgXVxyXG4gICB9XHJcbiAgIGV4cG9ydCBkZWZhdWx0IHN0b3JhZ2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "memory_storage.js"
      ],
      "names": [
        "storage",
        "posts",
        "id",
        "createdBy",
        "postedAt",
        "source",
        "title"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,OAAO,GAAG;AACVC,EAAAA,KAAK,EAAE,CACP;AACAC,IAAAA,EAAE,EAAE,KADJ;AAEAC,IAAAA,SAAS,EAAE,oBAFX;AAGAC,IAAAA,QAAQ,EAAE,eAHV;AAIAC,IAAAA,MAAM,EAAE,sCAJR;AAKAC,IAAAA,KAAK,EAAE;AALP,GADO,EAQP;AACAJ,IAAAA,EAAE,EAAE,KADJ;AAEAC,IAAAA,SAAS,EAAE,mBAFX;AAGAC,IAAAA,QAAQ,EAAE,eAHV;AAIAC,IAAAA,MAAM,EAAE,sCAJR;AAKAC,IAAAA,KAAK,EAAE;AALP,GARO,EAeP;AACAJ,IAAAA,EAAE,EAAE,KADJ;AAEAC,IAAAA,SAAS,EAAE,gBAFX;AAGAC,IAAAA,QAAQ,EAAE,eAHV;AAIAC,IAAAA,MAAM,EAAE,qCAJR;AAKAC,IAAAA,KAAK,EAAE;AALP,GAfO;AADG,CAAd;eAyBkBN,O",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "sourcesContent": [
        "let storage = {\r\n    posts: [\r\n    {\r\n    id: 10001,\r\n    createdBy: \"nikola@tankovic.me\",\r\n    postedAt: \"1576599080230\",\r\n    source: \"https://picsum.photos/id/669/500/500\",\r\n    title: \"pula more\",\r\n    },\r\n    {\r\n    id: 10002,\r\n    createdBy: \"marko@markovic.me\",\r\n    postedAt: \"1577349684270\",\r\n    source: \"https://picsum.photos/id/234/500/500\",\r\n    title: \"zagreb kopno\",\r\n    },\r\n    {\r\n    id: 10003,\r\n    createdBy: \"iva@ivkovic.me\",\r\n    postedAt: \"1577349684270\",\r\n    source: \"https://picsum.photos/id/12/500/500\",\r\n    title: \"rijeka luka\",\r\n    }\r\n    ]\r\n   }\r\n   export default storage;"
      ]
    },
    "sourceType": "script",
    "mtime": 1585248337549
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\serviceTemp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\serviceTemp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\serviceTemp.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\serviceTemp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
        "sourceFileName": "serviceTemp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Service = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Service = _axios[\"default\"].create({\n  baseURL: 'http://localhost:3000/',\n  timeout: 5000\n});\n\nexports.Service = Service;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VUZW1wLmpzIl0sIm5hbWVzIjpbIlNlcnZpY2UiLCJheGlvcyIsImNyZWF0ZSIsImJhc2VVUkwiLCJ0aW1lb3V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFJQSxPQUFPLEdBQUdDLGtCQUFNQyxNQUFOLENBQWE7QUFDdkJDLEVBQUFBLE9BQU8sRUFBRSx3QkFEYztBQUV2QkMsRUFBQUEsT0FBTyxFQUFFO0FBRmMsQ0FBYixDQUFkIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFx3YVxcd2Etd1xcd2EtYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5cclxubGV0IFNlcnZpY2UgPSBheGlvcy5jcmVhdGUoe1xyXG4gICAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC8nLFxyXG4gICAgdGltZW91dDogNTAwMFxyXG59KVxyXG5cclxuXHJcbmV4cG9ydCB7IFNlcnZpY2V9Il19",
    "map": {
      "version": 3,
      "sources": [
        "serviceTemp.js"
      ],
      "names": [
        "Service",
        "axios",
        "create",
        "baseURL",
        "timeout"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,OAAO,GAAGC,kBAAMC,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,wBADc;AAEvBC,EAAAA,OAAO,EAAE;AAFc,CAAb,CAAd",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "sourcesContent": [
        "import axios from 'axios';\r\n\r\nlet Service = axios.create({\r\n    baseURL: 'http://localhost:3000/',\r\n    timeout: 5000\r\n})\r\n\r\n\r\nexport { Service}"
      ]
    },
    "sourceType": "script",
    "mtime": 1585934997385
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\wa\\\\wa-w\\\\wa-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection_string = \"mongodb+srv://admin:admin@fo-cluster0-b1r2g.mongodb.net/test?retryWrites=true&w=majority\";\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db && client.isConnected()) {\n      resolve(db);\n    } else {\n      client.connect(function (err) {\n        if (err) {\n          reject(\"Spajanje na bazu nije uspjelo:\" + err);\n        } else {\n          console.log(\"Database connected successfully!\");\n          db = client.db(\"fipugram\");\n          resolve(db);\n        }\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFJQSxpQkFBaUIsR0FBRywwRkFBeEI7QUFFQSxJQUFJQyxNQUFNLEdBQUcsSUFBSUMsb0JBQU1DLFdBQVYsQ0FBc0JILGlCQUF0QixFQUF5QztBQUNyREksRUFBQUEsZUFBZSxFQUFFLElBRG9DO0FBRXJEQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUZpQyxDQUF6QyxDQUFiO0FBS0EsSUFBSUMsRUFBRSxHQUFHLElBQVQ7O2VBRWUsb0JBQU07QUFDakIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBRXBDLFFBQUlILEVBQUUsSUFBSUwsTUFBTSxDQUFDUyxXQUFQLEVBQVYsRUFBZ0M7QUFDNUJGLE1BQUFBLE9BQU8sQ0FBQ0YsRUFBRCxDQUFQO0FBQ0MsS0FGTCxNQUdLO0FBQ0RMLE1BQUFBLE1BQU0sQ0FBQ1UsT0FBUCxDQUFlLFVBQUFDLEdBQUcsRUFBSTtBQUMxQixZQUFJQSxHQUFKLEVBQVM7QUFDTEgsVUFBQUEsTUFBTSxDQUFDLG1DQUFtQ0csR0FBcEMsQ0FBTjtBQUNDLFNBRkwsTUFHSztBQUNEQyxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQ0FBWjtBQUNBUixVQUFBQSxFQUFFLEdBQUdMLE1BQU0sQ0FBQ0ssRUFBUCxDQUFVLFVBQVYsQ0FBTDtBQUNBRSxVQUFBQSxPQUFPLENBQUNGLEVBQUQsQ0FBUDtBQUNDO0FBQ0osT0FURztBQVVIO0FBQ0osR0FqQk0sQ0FBUDtBQWtCSCxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFx3YVxcd2Etd1xcd2EtYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ28gZnJvbSBcIm1vbmdvZGJcIjtcclxuXHJcbmxldCBjb25uZWN0aW9uX3N0cmluZyA9IFwibW9uZ29kYitzcnY6Ly9hZG1pbjphZG1pbkBmby1jbHVzdGVyMC1iMXIyZy5tb25nb2RiLm5ldC90ZXN0P3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiXHJcblxyXG5sZXQgY2xpZW50ID0gbmV3IG1vbmdvLk1vbmdvQ2xpZW50KGNvbm5lY3Rpb25fc3RyaW5nLCB7XHJcbiB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSk7XHJcblxyXG5sZXQgZGIgPSBudWxsXHJcblxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgXHJcbiAgICAgICAgaWYgKGRiICYmIGNsaWVudC5pc0Nvbm5lY3RlZCgpKSB7XHJcbiAgICAgICAgICAgIHJlc29sdmUoZGIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY2xpZW50LmNvbm5lY3QoZXJyID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgIHJlamVjdChcIlNwYWphbmplIG5hIGJhenUgbmlqZSB1c3BqZWxvOlwiICsgZXJyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkRhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhXCIpO1xyXG4gICAgICAgICAgICBkYiA9IGNsaWVudC5kYihcImZpcHVncmFtXCIpO1xyXG4gICAgICAgICAgICByZXNvbHZlKGRiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,iBAAiB,GAAG,0FAAxB;AAEA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAyC;AACrDI,EAAAA,eAAe,EAAE,IADoC;AAErDC,EAAAA,kBAAkB,EAAE;AAFiC,CAAzC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAAgC;AAC5BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACC,KAFL,MAGK;AACDL,MAAAA,MAAM,CAACU,OAAP,CAAe,UAAAC,GAAG,EAAI;AAC1B,YAAIA,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAAC,mCAAmCG,GAApC,CAAN;AACC,SAFL,MAGK;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAR,UAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,UAAV,CAAL;AACAE,UAAAA,OAAO,CAACF,EAAD,CAAP;AACC;AACJ,OATG;AAUH;AACJ,GAjBM,CAAP;AAkBH,C",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\wa\\wa-w\\wa-backend\\src\\",
      "sourcesContent": [
        "import mongo from \"mongodb\";\r\n\r\nlet connection_string = \"mongodb+srv://admin:admin@fo-cluster0-b1r2g.mongodb.net/test?retryWrites=true&w=majority\"\r\n\r\nlet client = new mongo.MongoClient(connection_string, {\r\n useNewUrlParser: true,\r\n useUnifiedTopology: true\r\n});\r\n\r\nlet db = null\r\n\r\nexport default () => {\r\n    return new Promise((resolve, reject) => {\r\n    \r\n        if (db && client.isConnected()) {\r\n            resolve(db)\r\n            }\r\n        else {\r\n            client.connect(err => {\r\n        if (err) {\r\n            reject(\"Spajanje na bazu nije uspjelo:\" + err);\r\n            }\r\n        else {\r\n            console.log(\"Database connected successfully!\");\r\n            db = client.db(\"fipugram\");\r\n            resolve(db);\r\n            }\r\n        });\r\n        }\r\n    });\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1586523279168
  }
}